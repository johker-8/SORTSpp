Usage examples
========================

Module level usage
----------------------

Scanning for a single space object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. literalinclude:: ../../SIMULATION_EXAMPLES/scan_object.py
   :language: python
   :linenos:


Tracking a single space object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. literalinclude:: ../../SIMULATION_EXAMPLES/track_object.py
   :language: python
   :linenos:


Filtering out detectable population
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. literalinclude:: ../../SIMULATION_EXAMPLES/detectable_population.py
   :language: python
   :linenos:



Expanding on libraries
-----------------------

Adding radar systems
~~~~~~~~~~~~~~~~~~~~~~~

All radar systems implemented should be added in the :mod:`radar_library` module.

To create a radar system, define a function that returns a :class:`radar_config.radar_system` instance. 

To create a :class:`radar_config.radar_system` instance three objects are needed:
 * A list of instances of :class:`radar_config.tx_antenna`
 * A list of instances of :class:`radar_config.rx_antenna`
 * A radar name

To create a instance of :class:`radar_config.rx_antenna` the following is needed:
 * Name
 * latitude
 * longitude
 * minimum elevation (degrees)
 * frequency
 * reviver noise temperature
 * radiation pattern: instance of :class:`antenna.beam_pattern` class

To create a instance of :class:`radar_config.tx_antenna` the following is needed:
 * Name
 * latitude
 * longitude
 * minimum elevation (degrees)
 * frequency
 * reviver noise temperature
 * radiation pattern: instance of :class:`antenna.beam_pattern` class
 * scanning pattern: instance of :class:`radar_scans.radar_scan` class
 * Transmit power (MW)
 * Transmit bandwidth (Hz)
 * duty cycle

Then optionally it is also possible to supply:
 * Transmit pule length
 * Transmit inter pule period
 * Pules used for coherent integration

Below is a example of an implemented radar system:


.. literalinclude:: ../../SIMULATION_EXAMPLES/new_radar.py
   :language: python
   :linenos:


Full simulation usage
----------------------

example stuff

Parsing output files
~~~~~~~~~~~~~~~~~~~~~~
Example on how to parse the tracklet files generated by executing the method :func:`~simulation.simulation.run_scan`

.. literalinclude:: ../../SIMULATION_EXAMPLES/parse_files.py
   :language: python
   :emphasize-lines: 11,15-22
   :linenos:



Not documented yet
---------------------

.. literalinclude:: ../../SIMULATIONS_SERVER/sim_CS_sst_fbeam_e3d.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS_SERVER/run_CS_sst_fbeam_e3d.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS_SERVER/sim_maint_sst_gbeam_e3d.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS_SERVER/run_maint_sst_gbeam_e3d.py
   :language: python
   :linenos:


test sims
------------

.. literalinclude:: ../../SIMULATIONS/sim_piggyback_test.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS/test_piggyback.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS/sim_dynamic_coldstart_test.py
   :language: python
   :linenos:

.. literalinclude:: ../../SIMULATIONS/test_dynamic_coldstart.py
   :language: python
   :linenos:
